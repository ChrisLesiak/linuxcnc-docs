
.TH hal_param_new "3hal" "2006-10-12" "EMC Documentation" "HAL"
.SH NAME

hal_param_new \- Create a HAL param

.SH SYNTAX

.HP
 int hal_param_bit_new(char *\fIname\fR, hal_param_dir_t \fIdir\fR, hal_bit_t * \fIdata_addr\fR, int \fIcomp_id\fR)

.HP
 int hal_param_float_new(char *\fIname\fR, hal_param_dir_t \fIdir\fR, hal_float_t * \fIdata_addr\fR, int \fIcomp_id\fR)

.HP
 int hal_param_u8_new(char *\fIname\fR, hal_param_dir_t \fIdir\fR, hal_u8_t * \fIdata_addr\fR, int \fIcomp_id\fR)

.HP
 int hal_param_s8_new(char *\fIname\fR, hal_param_dir_t \fIdir\fR, hal_s8_t * \fIdata_addr\fR, int \fIcomp_id\fR)

.HP
 int hal_param_u16_new(char *\fIname\fR, hal_param_dir_t \fIdir\fR, hal_u16_t * \fIdata_addr\fR, int \fIcomp_id\fR)

.HP
 int hal_param_s16_new(char *\fIname\fR, hal_param_dir_t \fIdir\fR, hal_s16_t * \fIdata_addr\fR, int \fIcomp_id\fR)

.HP
 int hal_param_u32_new(char *\fIname\fR, hal_param_dir_t \fIdir\fR, hal_u32_t * \fIdata_addr\fR, int \fIcomp_id\fR)

.HP
 int hal_param_s32_new(char *\fIname\fR, hal_param_dir_t \fIdir\fR, hal_s32_t * \fIdata_addr\fR, int \fIcomp_id\fR)

.HP
 int hal_param_bit_newf(hal_param_dir_t \fIdir\fR, hal_bit_t * \fIdata_addr\fR, int \fIcomp_id\fR)

.HP
 int hal_param_float_newf(hal_param_dir_t \fIdir\fR, hal_float_t * \fIdata_addr\fR, int \fIcomp_id\fR)

.HP
 int hal_param_u8_newf(hal_param_dir_t \fIdir\fR, hal_u8_t * \fIdata_addr\fR, int \fIcomp_id\fR, char *\fIfmt\fR, \fI...\fR)

.HP
 int hal_param_s8_newf(hal_param_dir_t \fIdir\fR, hal_s8_t * \fIdata_addr\fR, int \fIcomp_id\fR, char *\fIfmt\fR, \fI...\fR)

.HP
 int hal_param_u16_newf(hal_param_dir_t \fIdir\fR, hal_u16_t * \fIdata_addr\fR, int \fIcomp_id\fR, char *\fIfmt\fR, \fI...\fR)

.HP
 int hal_param_s16_newf(hal_param_dir_t \fIdir\fR, hal_s16_t * \fIdata_addr\fR, int \fIcomp_id\fR, char *\fIfmt\fR, \fI...\fR)

.HP
 int hal_param_u32_newf(hal_param_dir_t \fIdir\fR, hal_u32_t * \fIdata_addr\fR, int \fIcomp_id\fR, char *\fIfmt\fR, \fI...\fR)

.HP
 int hal_param_s32_newf(hal_param_dir_t \fIdir\fR, hal_s32_t * \fIdata_addr\fR, int \fIcomp_id\fR, char *\fIfmt\fR, \fI...\fR)

.HP
 int hal_param_new(char *\fIname\fR, hal_type_t \fItype\fR, hal_in_dir_t \fIdir\fR, void *\fIdata_addr\fR, int \fIcomp_id\fR) 

.SH  ARGUMENTS
.IP \fIname\fR
The name of the param
.IP \fIdir\fR

The direction of the param, from the viewpoint of the component.  It may be one
of \fBHAL_RO\fR, or \fBHAL_RW\fR
A component may assign a value to any param, but other programs (such as halcmd)
may only assign a value to a param that is \fBHAL_RW\fR.

.IP \fIdata_addr\fR
The address of the data, which must lie within memory allocated by
\fBhal_malloc\fR.

.IP \fIcomp_id\fR
A HAL component identifier returned by an earlier call to \fBhal_init\fR.

.IP \fIfmt,\ ...\fR
A printf-style format string and arguments

.IP \fItype\fR
The type of the param, one of: \fBHAL_BIT\fR, \fBHAL_FLOAT\fR, \fBHAL_S8\fR,
\fBHAL_U8\fR, \fBHAL_S16\fR, \fBHAL_U16\fR, \fBHAL_S32\fR, \fBHAL_U32\fR.

.SH DESCRIPTION
The \fBhal_param_new\fR family of functions create a new \fIparam\fR object.

There are functions for each of the data types that the HAL supports.  Pins may
only be linked to signals of the same type.

.SH RETURN VALUE
Returns a HAL status code.

.PHONY: docs docsclean

DOC_DIR=../docs
DOC_SRCDIR=../docs/src

MAN_SRCS := \
	$(DOC_DIR)/man/man1/emc.1 \
	$(DOC_DIR)/man/man1/halcmd.1 \
	$(DOC_DIR)/man/man1/hal_joystick.1 \
	$(DOC_DIR)/man/man1/halmeter.1 \
	$(DOC_DIR)/man/man1/halui.1 \
	$(sort $(filter-out $(DOC_DIR)/man/man3/skeleton%, $(wildcard $(DOC_DIR)/man/man3/*.3rtapi $(DOC_DIR)/man/man3/*.3hal))) \
	$(sort $(COMP_MANPAGES) $(COMP_DRIVER_MANPAGES)) \

ifneq ($(MANDB),)
default: $(DOC_DIR)/man/index.db
$(DOC_DIR)/man/index.db: $(MAN_SRCS)
	@echo "Updating 'whatis' database"
	@$(MANDB) $(DOC_DIR)/man
endif

ifeq ($(BUILD_DOCS),yes)
DOC_SRCS := \
	code/Code_Notes.lyx \
	code/Style_Guide.lyx \
	gui/axis.lyx \
	gui/halui.lyx \
	gui/mini.lyx \
	gui/tkemc.lyx \
	Master_Developer.lyx \
	Master_Integrator.lyx \
	Master_User.lyx \
	common/GPLD_Copyright.lyx \
	common/Glossary.lyx \
	common/emc2_introduction.lyx \
	config/ini_config.lyx \
	config/ini_homing.lyx \
	config/emc2hal.lyx \
	config/stepper.lyx \
	gcode/coordinates.lyx \
	gcode/main.lyx \
	gcode/mill_canned.lyx \
	gcode/tool_compensation.lyx \
	hal/comp.lyx \
	hal/drivers.lyx \
	hal/general_ref.lyx \
	hal/halshow.lyx \
	hal/intro.lyx \
	hal/rtcomps.lyx \
	hal/tools.lyx \
	hal/tutorial.lyx \
	install/compiling_emc2.lyx \
	install/installing_emc2.lyx \
	motion/kinematics.lyx \
	Master_HAL.lyx

MAN_HTML_TARGETS := $(patsubst $(DOC_DIR)/man/%, $(DOC_DIR)/html/man/%.html, $(MAN_SRCS))
PDF_TARGETS := $(addprefix $(DOC_DIR)/,HAL_User_Manual.pdf EMC2_User_Manual.pdf EMC2_Developer_Manual.pdf EMC2_Integrator_Manual.pdf)
HTML_TARGETS := $(patsubst %.lyx,$(DOC_DIR)/html/%/index.html, $(filter-out Master_%, $(DOC_SRCS))) $(MAN_HTML_TARGETS) $(DOC_DIR)/html/index.html

L2HFLAGS := -init_file src/.latex2html-init -local_icons \
	-unsegment -link 4 -info 0 -split +0 -html_version 4.0,math,table 

ifneq ($(MAKECMDGOALS),clean)
ifneq ($(MAKECMDGOALS),docclean)
-include $(patsubst %.lyx, depends/%.d, $(DOC_SRCS))
Makefile: $(patsubst %.lyx, depends/%.d, $(DOC_SRCS))
endif
endif

docs: htmldocs pdfdocs
pdfdocs: $(PDF_TARGETS)
htmldocs: $(HTML_TARGETS)

$(DOC_DIR)/HAL_User_Manual.pdf: $(DOC_SRCDIR)/Master_HAL.pdf
	@ln -f $< $@
$(DOC_DIR)/EMC2_User_Manual.pdf: $(DOC_SRCDIR)/Master_User.pdf
	@ln -f $< $@
$(DOC_DIR)/EMC2_Developer_Manual.pdf: $(DOC_SRCDIR)/Master_Developer.pdf
	@ln -f $< $@
$(DOC_DIR)/EMC2_Integrator_Manual.pdf: $(DOC_SRCDIR)/Master_Integrator.pdf
	@ln -f $< $@

$(DOC_DIR)/html/man/%.html: $(DOC_DIR)/man/%
	@echo Formatting $(notdir $<) as HTML
	@mkdir -p $(dir $@)
	@(cd $(DOC_DIR)/man; groff -Thtml -man $(patsubst $(DOC_DIR)/man/%,%,$<)) > $@

objects/index.incl: objects/var-MAN_HTML_TARGETS
	echo "<LI>Section 1<UL>" > $@.tmp
	for i in $(filter %.1.html, $(MAN_HTML_TARGETS)); do j=$$(basename $$i .html); echo "<LI><A HREF=$${i#$(DOC_DIR)/html/}>$$j</A>"; done >> $@.tmp
	echo "</UL><LI>Section 3hal<UL>" >> $@.tmp
	for i in $(filter %.3hal.html, $(MAN_HTML_TARGETS)); do j=$$(basename $$i .html); echo "<LI><A HREF=$${i#$(DOC_DIR)/html/}>$$j</A>"; done >> $@.tmp
	echo "</UL><LI>Section 3rtapi<UL>" >> $@.tmp
	for i in $(filter %.3rtapi.html, $(MAN_HTML_TARGETS)); do j=$$(basename $$i .html); echo "<LI><A HREF=$${i#$(DOC_DIR)/html/}>$$j</A>"; done >> $@.tmp
	echo "</UL><LI>Section 9<UL>" >> $@.tmp
	for i in $(filter %.9.html, $(MAN_HTML_TARGETS)); do j=$$(basename $$i .html); echo "<LI><A HREF=$${i#$(DOC_DIR)/html/}>$$j</A>"; done >> $@.tmp
	echo "</UL>" >> $@.tmp
	mv -f $@.tmp $@

$(DOC_DIR)/html/index.html: $(DOC_SRCDIR)/index.tmpl objects/index.incl $(DOC_SRCDIR)/index.foot
	(cat $(DOC_SRCDIR)/index.tmpl objects/index.incl $(DOC_SRCDIR)/index.foot)  > $@	
$(DOC_SRCDIR)/%.pdf: $(DOC_SRCDIR)/%.lyx
	$(ECHO) Building $@
	@rm -f $@
	@$(LYX) --export pdf2 $<
	@test -f $@

depends/%.d: $(DOC_SRCDIR)/%.lyx $(DOC_SRCDIR)/lyxdep.py
	$(ECHO) Depending $<
	@mkdir -p $(dir $@)
	@$(PYTHON) $(DOC_SRCDIR)/lyxdep.py $< $@ $(DOC_DIR)/html/$*/index.html > $@

%.tex: %.lyx
	$(ECHO) Converting $< to latex
	@rm -f $(<:.lyx=.tex)
	@$(LYX) --export latex $<
	@test -f $(<:.lyx=.tex)
	@sed -f $(DOC_SRCDIR)/l2hprep.sed -i $(<:.lyx=.tex)

$(DOC_DIR)/html/%/index.html: $(DOC_SRCDIR)/%.tex
	$(ECHO) Converting $< to HTML
	@rm -rf $(<:.tex=)
	@mkdir -p $(<:.tex=)
	@if [ ! -z "$(filter %.eps, $^)" ]; then cp $(filter %.eps, $^) $(<:.tex=); fi
	@(cd ../docs; latex2html $(L2HFLAGS) $(EXTRAL2HFLAGS) $(patsubst ../docs/%, %, $<))
	@rm -rf $(dir $@)
	@mkdir -p $(dir $@)
	@mv $(<:.tex=)/* $(dir $@)

default: docs
else
docs:
	$(error Cannot build documents, missing LyX or some other required program, or explicitly disabled in configure)

endif

docclean:
	-rm -f $(DOC_DIR)/HAL_User_Manual.pdf
	-rm -f $(DOC_DIR)/EMC2_User_Manual.pdf
	-rm -f $(DOC_DIR)/EMC2_Developer_Manual.pdf
	-rm -f $(DOC_DIR)/EMC2_Integrator_Manual.pdf
	-rm -f $(DOC_SRCDIR)/*.d
	-rm -f $(DOC_SRCDIR)/*.pdf
	-rm -f $(patsubst %,$(DOC_SRCDIR)/%, $(DOC_SRCS:.lyx=.tex))
	-rm -rf $(patsubst %.lyx,$(DOC_DIR)/html/%, $(DOC_SRCS))

MAN_DEPS := $(patsubst $(DOC_DIR)/man/%, depends/%.d, $(MAN_SRCS))
$(MAN_DEPS): depends/%.d: $(DOC_DIR)/man/%
	@echo Depending $(notdir $<)
	@mkdir -p $(dir $@)
	@echo -n "$(DOC_DIR)/html/man/$*.html: $<" > $@.tmp
	@grep '^\.so ' $< | awk '{printf " \\\n\t$(DOC_DIR)/man/%s", $$2}' >> $@.tmp
	@echo >> $@.tmp
	@mv -f $@.tmp $@

-include $(MAN_DEPS)
Makefile: $(MAN_DEPS)


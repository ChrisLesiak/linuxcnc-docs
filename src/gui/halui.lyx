#LyX 1.3 created this file. For more info see http://www.lyx.org/
\lyxformat 221
\textclass book
\language english
\inputencoding default
\fontscheme bookman
\graphics default
\float_placement !htbp
\paperfontsize default
\spacing single 
\papersize letterpaper
\paperpackage a4
\use_geometry 1
\use_amsmath 1
\use_natbib 0
\use_numerical_citations 0
\paperorientation portrait
\leftmargin 1in
\topmargin 1in
\rightmargin 0.8in
\bottommargin 0.8in
\secnumdepth 3
\tocdepth 5
\paragraph_separation skip
\defskip smallskip
\quotes_language english
\quotes_times 2
\papercolumns 1
\papersides 1
\paperpagestyle default

\layout Chapter


\begin_inset LatexCommand \label{cha:Halui}

\end_inset 

Halui
\layout Section


\begin_inset LatexCommand \label{sec:HaluiIntroduction}

\end_inset 

Introduction
\layout Standard

Halui is a HAL based user interface for EMC, it connects HAL pins to NML
 commands.
 Most of the functionality (buttons, indicators etc.) that is provided by
 a traditional GUI (mini, Axis, etc.), is provided by HAL pins in Halui.
\layout Standard

The easiest way to add halui is to add the following to the [HAL] section
 of the ini file.
\layout Quote

HALUI = halui
\layout Standard

An alternate way to invoke it (especially when using a stepconf generated
 config file) is to include the following in your custom.hal file.
 Make sure you use the actual path to your ini file.
\layout Quote

loadusr halui -ini /path/to/inifile.ini
\layout Standard

in your custom.hal file.
\layout Section


\begin_inset LatexCommand \label{sec:Halui-pin-reference}

\end_inset 

Halui pin reference
\layout Subsection

Abort
\layout Itemize

halui.abort (bit, in) - pin to send an abort message (clears out most errors)
\layout Subsection

Axis
\layout Itemize

halui.axis.n.pos-commanded (float, out) - Commanded axis position in machine
 coordinates
\layout Itemize

halui.axis.n.pos-feedback (float, out) - Feedback axis position in machine
 coordinates
\layout Itemize

halui.axis.n.pos-relative (float, out) - Commanded axis position in relative
 coordinates
\layout Subsection

E-Stop
\layout Itemize

halui.estop.activate (bit, in) - pin for requesting E-Stop
\layout Itemize

halui.estop.is-activated (bit, out)- indicates E-stop reset
\layout Itemize

halui.estop.reset (bit, in) - pin for requesting E-Stop reset
\layout Subsection

Feed Override
\layout Itemize

halui.feed-override.count-enable (bit, in) - must be true for counts to work.
\layout Itemize

halui.feed-override.counts (s32, in) - counts from an encoder to change FO
\layout Itemize

halui.feed-override.decrease (bit, in) - pin for decreasing the FO (-=scale)
\layout Itemize

halui.feed-override.increase (bit, in) - pin for increasing the FO (+=scale)
\layout Itemize

halui.feed-override.scale (float, in) - pin for setting the scale for increase
 and decrease
\layout Itemize

halui.feed-override.value (float, out) - current FO value
\layout Subsection

Flood
\layout Itemize

halui.flood.is-on (bit, out) - indicates flood is on
\layout Itemize

halui.flood.off (bit, in) - pin for requesting flood off
\layout Itemize

halui.flood.on (bit, in) - pin for requesting flood on
\layout Subsection

Jog
\layout Standard

<n> is a number between 0 and 8 and 'selected'.
\layout Itemize

halui.jog-deadband (float, in) - deadband for analog jogging (smaller jogging
 speed requests are not performed)
\layout Itemize

halui.jog-speed (float, in) - pin for setting jog speed for minus/plus jogging
\layout Itemize

halui.jog.<n>.analog (float, in) - analog velocity input for jogging (usefull
 with joysticks or other analog devices)
\layout Itemize

halui.jog.<n>.minus (bit, in)- pin for jogging axis <n> in negative direction
 at the halui.jog.speed velocity
\layout Itemize

halui.jog.<n>.plus (bit, in) - pin for jogging axis <n> in positive direction
 at the halui.jog.speed velocity
\layout Itemize

halui.jog.selected.minus (bit, in) - pin for jogging the selected axis in negative
 direction at the halui.jog.speed velocity
\layout Itemize

halui.jog.selected.plus (bit, in) - pin for jogging the selected axis in positive
 direction at the halui.jog.speed velocity
\layout Subsection

Joint
\layout Standard

<n> is a number between 0 and 8 and 'selected'.
\layout Itemize

halui.joint.<n>.has-fault (bit, out) - status pin telling the joint has a fault
\layout Itemize

halui.joint.<n>.home (bit, in) - pin for homing the specific joint 
\layout Itemize

halui.joint.<n>.is-homed (bit, out) - status pin telling that the joint is
 homed
\layout Itemize

halui.joint.<n>.is-selected bit (bit, out) - status pin a joint is selected
 - internal halui
\layout Itemize

halui.joint.<n>.on-hard-max-limit (bit, out) - status pin telling joint <n>
 is on the positive hardware limit switch
\layout Itemize

halui.joint.<n>.on-hard-min-limit (bit, out) - status pin telling joint <n>
 is on the negative hardware limit switch
\layout Itemize

halui.joint.<n>.on-soft-max-limit (bit, out) - status pin telling joint <n>
 is at the positive software limit
\layout Itemize

halui.joint.<n>.on-soft-min-limit (bit, out) - status pin telling joint <n>
 is at the negative software limit
\layout Itemize

halui.joint.<n>.select (bit, in) - select joint (0..7) - internal halui
\layout Itemize

halui.joint.selected (u32, out) - selected joint (0..7) - internal halui
\layout Itemize

halui.joint.selected.has-fault (bit, out) - status pin telling that the joint
 <n> has a fault
\layout Itemize

halui.joint.selected.home (bit, in) - pin for homing the selected joint 
\layout Itemize

halui.joint.selected.is-homed (bit, out) - status pin telling that the selected
 joint is homed
\layout Itemize

halui.joint.selected.on-hard-max-limit (bit, out) - status pin telling that
 the selected joint is on the positive hardware limit
\layout Itemize

halui.joint.selected.on-hard-min-limit (bit, out) - status pin telling that
 the selected joint is on the negative hardware limit
\layout Itemize

halui.joint.selected.on-soft-max-limit (bit, out) - status pin telling that
 the selected joint is on the positive software limit
\layout Itemize

halui.joint.selected.on-soft-min-limit (bit, out) - status pin telling that
 the selected joint is on the negative software limit
\layout Subsection

Lube
\layout Itemize

halui.lube.is-on (bit, out) - indicates lube is on
\layout Itemize

halui.lube.off (bit, in) - pin for requesting lube off
\layout Itemize

halui.lube.on (bit, in) - pin for requesting lube on
\layout Subsection

Machine
\layout Itemize

halui.machine.is-on (bit, out) - indicates machine on
\layout Itemize

halui.machine.off (bit, in) - pin for requesting machine off
\layout Itemize

halui.machine.on (bit, in) - pin for requestiong machine on
\layout Subsection

Max Velocity
\layout Standard

The maximum linear velocity can be adjusted from 0 to the MAX_VELOCITY that
 is set in the [TRAJ] section of the ini file.
\layout Itemize

halui.max-velocity.count-enable (bit, in) - when TRUE, modify max velocity
 when counts changes
\layout Itemize

halui.max-velocity.counts (s32, in) - lets you hook up an encoder to change
 the max velocity
\layout Itemize

halui.max-velocity.decrease (bit, in) - pin for decreasing max velocity
\layout Itemize

halui.max-velocity.increase (bit, in) - pin for increasing max velocity
\layout Itemize

halui.max-velocity.scale (float, in) - the amount applied to the current maximum
 velocity with each transition from off to on of the increase or decrease
 pin in machine units per second.
\layout Itemize

halui.max-velocity.value (float, out) - is the maximum linear velocity in
 machine units per second.
\layout Subsection

MDI
\begin_inset LatexCommand \label{sub:MDI}

\end_inset 


\layout Standard

Sometimes the user wants to add more complicated tasks to be performed by
 the activation of a HAL pin.
 This is possible using the following MDI commands scheme:
\layout Itemize

The MDI_COMMAND is added to the ini file in the [HALUI] section.
 
\layout Quote

[HALUI] 
\newline 
MDI_COMMAND = G0 X0
\layout Itemize

When halui starts it will read the MDI_COMMAND fields in the ini, and export
 pins from 00 to the number of MDI_COMMAND's found in the ini up to a maximum
 of 64 commands.
\layout Itemize

halui.mdi-command-<nn> (bit, in) - halui will try to send the MDI command
 defined in the ini.
 This will not always succeed, depending on the operating mode emc2 is in
 (e.g.
 while in AUTO halui can't successfully send MDI commands).
 If the command succeeds then it will place EMC in the MDI mode and then
 back to Manual mode.
\layout Subsection

Mist 
\layout Itemize

halui.mist.is-on (bit, out) - indicates mist is on
\layout Itemize

halui.mist.off (bit, in) - pin for requesting mist off
\layout Itemize

halui.mist.on (bit, in) - pin for requesting mist on
\layout Subsection

Mode
\layout Itemize

halui.mode.auto (bit, in) - pin for requesting auto mode
\layout Itemize

halui.mode.is-auto (bit, out) - indicates auto mode is on
\layout Itemize

halui.mode.is-joint (bit, out) - pin showing joint by joint jog mode is on
\layout Itemize

halui.mode.is-manual (bit, out) - indicates manual mode is on
\layout Itemize

halui.mode.is-mdi (bit, out) - indicates mdi mode is on
\layout Itemize

halui.mode.is-teleop (bit, out) - pin showing coordinated jog mode is on
\layout Itemize

halui.mode.joint (bit, in) - pin for requesting joint by joint jog mode
\layout Itemize

halui.mode.manual (bit, in) - pin for requesting manual mode
\layout Itemize

halui.mode.mdi (bit, in) - pin for requesting mdi mode
\layout Subsection

Program
\layout Itemize

halui.program.block-delete.is-on (bit, out) -
\layout Itemize

halui.program.block-delete.off (bit, in) -
\layout Itemize

halui.program.block-delete.on (bit, in) -
\layout Itemize

halui.program.is-idle (bit, out) - status pin telling that no program is running
\layout Itemize

halui.program.is-paused (bit, out) - status pin telling that a program is
 paused
\layout Itemize

halui.program.is-running (bit, out) - status pin telling that a program is
 running
\layout Itemize

halui.program.optional-stop.is-on (bit, out) -
\layout Itemize

halui.program.optional-stop.off (bit, in) -
\layout Itemize

halui.program.optional-stop.on (bit, in) -
\layout Itemize

halui.program.pause (bit, in) - pin for pausing a program
\layout Itemize

halui.program.resume (bit, in) - pin for resuming a paused program
\layout Itemize

halui.program.run (bit, in) - pin for running a program
\layout Itemize

halui.program.step (bit, in) - pin for stepping in a program
\layout Itemize

halui.program.stop (bit, in) - pin for stopping a program
\layout Subsection

Spindle Override
\layout Itemize

halui.spindle-override.count-enable (bit, in) - when TRUE, modify spindle
 override when counts changes.
\layout Itemize

halui.spindle-override.counts (s32, in) - counts from an encoder for example
 to change SO
\layout Itemize

halui.spindle-override.decrease (bit, in)- pin for decreasing the SO (-=scale)
\layout Itemize

halui.spindle-override.increase (bit, in) - pin for increasing the SO (+=scale)
\layout Itemize

halui.spindle-override.scale (float, in) - pin for setting the scale on changing
 the SO
\layout Itemize

halui.spindle-override.value (float, out) - current SO value
\layout Subsection

Spindle
\layout Itemize

halui.spindle.brake-is-on (bit, out) - indicates brake is on
\layout Itemize

halui.spindle.brake-off (bit, in) - pin for deactivating spindle/brake
\layout Itemize

halui.spindle.brake-on (bit, in) - pin for activating spindle-brake
\layout Itemize

halui.spindle.decrease (bit, in) - decreases spindle speed
\layout Itemize

halui.spindle.forward (bit, in) - starts the spindle with CW motion
\layout Itemize

halui.spindle.increase (bit, in)- increases spindle speed
\layout Itemize

halui.spindle.is-on (bit, out) -
\layout Itemize

halui.spindle.reverse (bit, in)- starts the spindle with a CCW motion
\layout Itemize

halui.spindle.runs-backward (bit, out) -
\layout Itemize

halui.spindle.runs-forward (bit, out) -
\layout Itemize

halui.spindle.start (bit, in) - starts the spindle
\layout Itemize

halui.spindle.stop (bit, in) - stops the spindle
\layout Subsection

Tool
\layout Itemize

halui.tool.length-offset (float, out) - indicates current applied tool-length-offs
et
\layout Itemize

halui.tool.number (u32, out) - indicates current selected tool
\the_end

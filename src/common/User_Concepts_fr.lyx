#LyX 1.3 created this file. For more info see http://www.lyx.org/
\lyxformat 221
\textclass book
\language french
\inputencoding auto
\fontscheme bookman
\graphics default
\paperfontsize 10
\spacing single 
\papersize letterpaper
\paperpackage a4
\use_geometry 0
\use_amsmath 0
\use_natbib 0
\use_numerical_citations 0
\paperorientation portrait
\secnumdepth 5
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\quotes_language french
\quotes_times 2
\papercolumns 1
\papersides 1
\paperpagestyle headings

\layout Chapter

Concepts importants
\layout Standard

Ce chapitre couvre les concepts importants qui doivent être assimilés avant
 d'essayer de démarrer un fichier de G-code.
\layout Section

Contrôle de trajectoire
\layout Subsection

La planification de trajectoire
\layout Standard

La planification de trajectoire est en général, le moyen qui permet à EMC2
 de suivre le chemin spécifié par le programme G-code, tout en restant dans
 les limites permises par la machine.
 
\layout Standard

Un programme en G-code ne peut jamais être totalement suivi.
 Par exemple imaginez que vous spécifiez dans une ligne du programme les
 mouvements suivants:
\layout LyX-Code

G1 X10 F100 (G1 un mouvement linéaire, X10 la destination, F100 la vitesse)
\layout Standard

En réalité, la totalité du mouvement ne peut pas être effectuée à F100,
 puisque la machine commence le mouvement à une vitesse nulle, elle doit
 accélérer pour se déplacer vers X=10, puis décélérer pour revenir à une
 vitesse nulle en fin de mouvement.
 Parfois une portion du mouvement se fera bien à F100, mais pour beaucoup
 de mouvements, spécialement les petits mouvements, la vitesse spécifiée
 ne sera jamais atteinte.
\layout Standard

Les accélérations et décélérations de base décrite ici ne sont pas complexes
 et ne nécessite pas de compromis.
 Les contraintes des axes de la machine sont placés dans le fichier INI,
 comme la vitesse maximum de l'axe et l'accélération ne devant pas être
 dépassées par le planificateur de trajectoire.
\layout Subsection

Le suivi du parcours
\layout Standard

Un problème plus compliqué est posé par le suivi du parcours.
 Quand vous programmez un angle droit en G-code, le planificateur de trajectoire
 peut suivre différents parcours, tous sont bons dans certains cas; il peut
 décélérer et s'arrêter exactement sur les coordonnées du sommet de l'angle,
 puis accélérer dans la direction perpendiculaire.
 Il peut également faire ce qui est appelé le mode 
\begin_inset Quotes fld
\end_inset 

trajectoire continue
\begin_inset Quotes frd
\end_inset 

, qui consiste à maintenir la vitesse d'avance en passant vers le sommet
 de l'angle, ce qui nécessite d'arrondir l'angle de façon à respecter les
 contraintes machine.
 Vous pouvez remarquer qu'il y a dans ce cas un compromis: vous pouvez ralentir
 pour avoir un meilleur suivi du parcours, ou conserver une vitesse d'avance
 élevée au détriment de la finesse des angles, du fait d'un moins bon suivi
 du parcours.
 Selon les particularités de l'usinage, du matériau, de l'outillage, etc.,
 le programmeur devra décider du bon compromis.
\layout Subsection

La programmation du planificateur
\layout Standard

Les commandes de contrôle de trajectoire sont les suivantes:
\layout Description

G61 (mode arrêt exact) G61 indique au planificateur de s'arrêter exactement
 à la fin de chaque segment.
 Le parcours sera suivi avec exactitude mais les arrêts complets de l'avance
 peuvent se révéler destructeurs pour la pièce ou l'outillage, selon les
 particularités de l'usinage.
 
\layout Description

G64 (mode trajectoire continue sans tolérance) G64 est juste une trajectoire
 continue, le 
\begin_inset Quotes fld
\end_inset 

naive cam detector
\begin_inset Quotes frd
\end_inset 

 n'est pas activé.
 G64 et G64 P0 indiquent au planificateur de sacrifier la précision de suivi
 du parcours pour conserver une vitesse d'avance élevée.
 Ce mode est nécessaire pour certains types de matériaux ou d'outillages
 pour lesquels l'arrêt exact est dangereux.
 Il peut très bien fonctionner tant que le programmeur garde à l'esprit
 que le parcours d'outil pourra être plus arrondi que celui indiqué par
 le programme.
 
\layout Description

G64\SpecialChar ~
Px.xxx (mode trajectoire continue avec tolérance) Ce mode active le 
\begin_inset Quotes fld
\end_inset 

naive cam detector
\begin_inset Quotes frd
\end_inset 

 et active le mode trajectoire continue avec tolérance.
 Si vous utilisez le millimètre comme unité et programmez G64 P1.27, vous
 dites au planificateur que vous souhaitez une vitesse d'avance continue,
 mais qu'aux coins programmés vous voulez un ralentissement suffisant pour
 que le parcours de l'outil puisse rester à moins de 1.27mm du parcours programmé.
 L'amplitude exacte du ralentissement dépend de la géométrie de l'angle
 programmé et des contraintes machine, mais la seule chose dont le programmeur
 ait à se soucier est la tolérance, ce qui lui donne le contrôle complet
 des compromis du suivi de parcours.
 La tolérance de ce mode peut être modifiée tout au long du programme si
 nécessaire.
 Attention: spécifier un G64 P0 aura le même effet qu'un G64 seul (voir
 ci-dessus), c'est rendu nécessaire pour conserver la compatibilité ascendante
 avec les anciens programmes G-code.
 
\layout Description

Trajectoire\SpecialChar ~
continue\SpecialChar ~
sans\SpecialChar ~
tolérance Le point contrôlé touchera chaque mouvement
 spécifié à au moins un point.
 La machine ne pourra jamais se déplacer à une vitesse d'avance telle qu'elle
 ne puisse pas s'arrêter avec précision à la fin du mouvement en cours (ou
 du prochain mouvement, si vous mettez en pause lorsque la trajectoire est
 déjà commencée).
 La distance avec le point final du mouvement est aussi grande que nécessaire
 pour maintenir la meilleure vitesse d'avance possible pendant le parcours.
\layout Description


\begin_inset Quotes fld
\end_inset 

Naive\SpecialChar ~
Cam\SpecialChar ~
Detector
\begin_inset Quotes frd
\end_inset 

 Les mouvements successifs en G1, concernant uniquement les axes XYZ, dont
 la déviation par rapport à une ligne droite est inférieur à P, sont fusionnés
 en une seule ligne droite.
 Ce mouvement fusionné remplace les mouvements individuels en G1 pour obtenir
 une nouvelle trajectoire avec tolérance.
 Entre les mouvements successifs, le point contrôlé ne passera jamais à
 plus de P- du point final du mouvement en cours.
 Le point contrôlé touchera au moins un point de chacun des mouvements.
 La machine ne pourra jamais se déplacer à une vitesse ne lui permettant
 pas de venir s'arrêter exactement à la fin du mouvement actuel (ou du prochain
 mouvement, si vous mettez en pause lorsque la trajectoire est déjà commencée).
 
\layout Subsection

Planification des mouvements
\layout Standard

Assurez-vous que les mouvements soient 
\begin_inset Quotes fld
\end_inset 

assez longs
\begin_inset Quotes frd
\end_inset 

 pour convenir à votre machine/matériel.
 Principalement en raison de la règle selon laquelle 
\begin_inset Quotes fld
\end_inset 

la machine ne pourra jamais se déplacer à une vitesse ne lui permettant
 pas de venir s'arrêter complètement à la fin du mouvement actuel
\begin_inset Quotes frd
\end_inset 

, il y a une longueur minimale de déplacement permettant à la machine d'atteindr
e la vitesse demandée avec un réglage d'accélération donné.
\layout Standard

Les phases d'accélération et de décélération utilisent chacune la moitié
 de la variable MAX_ACCELERATION du fichier .ini.
 Avec une trajectoire continue c'est exactement inversé, ce qui fait que
 l'accélération totale de l'axe est égal à la variablee MAX_ACCELERATION.
 Dans d'autres cas, l'accélération actuelle de la machine est un peu inférieure
 à celle du fichier ini.
\layout Standard

Pour maintenir la vitesse d'avance, le mouvement doit être plus long que
 la distance qui lui est nécessaire pour accélérer de zéro à la vitesse
 souhaitée, puis de décélérer pour s'arrêter.
 En utilisant A comme étant 1/2 de la variable MAX_ACCELERATION et F comme
 étant la vitesse d'avance *en unités par seconde*, le temps d'accélération
 sera ta=F/A et la distance d'accélération sera da=(1/2)*F*ta.
 Les temps et distance de décélération sont les mêmes, ce qui fait que la
 distance critique dc=da+dd=2*da=F
\begin_inset Formula $^{\textrm{2}}$
\end_inset 

/A.
\layout Standard

Par exemple, pour une vitesse d'avance de 25mm par seconde et une accélération
 de 250mm/sec
\begin_inset Formula $^{\textrm{2}}$
\end_inset 

, la distance critique sera de 10
\begin_inset Formula $^{\textrm{2}}$
\end_inset 

/100=1mm.
 Pour une vitesse d'avance de 5mm par seconde, la distance critique ne serait
 que de 5
\begin_inset Formula $^{\textrm{2}}$
\end_inset 

/100 = .25mm.
\layout Section

G-code
\layout Subsection

Vitesse d'avance
\layout Standard

Si vous avez un tour ou un axe rotatif, pour savoir comment la vitesse d'avance
 s'applique selon que l'axe est linéaire ou rotatif, lire et comprendre
 la section 
\begin_inset Quotes fld
\end_inset 

vitesse d'avance
\begin_inset Quotes frd
\end_inset 

(
\begin_inset LatexCommand \ref{sub:-Vitesse-d'avance}

\end_inset 

) du manuel de l'utilisateur.
\layout Subsection

Compensation de rayon d'outil
\layout Standard

La compensation de rayon d'outil (G41/42) nécessite que l'outil puisse toucher
 tout au long de la trajectoire programmée sans interférer avec les mouvements
 d'entrée ou de sortie.
 Si c'est impossible avec le diamètre de l'outil courant, une erreur est
 signalée.
 Un diamètre d'outil inférieur est peut être utilisable sans erreur pour
 le même parcours.
 Ce qui signifie que quand ce type de problème se présente, il est possible
 de programmer un outil plus petit pour usiner le même parcours sans erreur.
 Voir la section compensation de rayon d'outil (
\begin_inset LatexCommand \ref{sec:Compensation-rayon-d'outil}

\end_inset 

) pour plus d'informations.
\layout Section

Prise d'origine machine
\layout Standard

Après le démarrage d'EMC2 chaque axe doit être référencé sur sont point
 d'origine machine avant tout mouvement ou commande MDI.
 
\layout Standard

Pour déroger à ce comportement par défaut, ou pour utiliser l'interface
 Mini, il est possible d'ajuster l'option NO_FORCE_HOMING = 1 dans la section
 [TRAJ] du fichier ini.
\layout Section

Changement d'outil
\layout Standard

Il existe plusieurs options pour effectuer un changement d'outil.
 Voir la section [EMCIO] dans le manuel de l'intégrateur pour les informations
 sur la configuration de ces options.
 Voir également les sections G28
\begin_inset LatexCommand \ref{sub:G28,-G28.1:-Aller}

\end_inset 

 et G30
\begin_inset LatexCommand \ref{sub:G30,-G30.1:-Aller}

\end_inset 

 du manuel de l'utilisateur.
 
\the_end

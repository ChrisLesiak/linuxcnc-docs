#LyX 1.5.3 created this file. For more info see http://www.lyx.org/
\lyxformat 276
\begin_document
\begin_header
\textclass book
\language english
\inputencoding default
\font_roman bookman
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\float_placement !htbp
\paperfontsize default
\spacing single
\papersize letterpaper
\use_geometry true
\use_amsmath 2
\use_esint 0
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\leftmargin 1in
\topmargin 1in
\rightmargin 0.8in
\bottommargin 0.8in
\secnumdepth 3
\tocdepth 5
\paragraph_separation skip
\defskip smallskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\end_header

\begin_body

\begin_layout Chapter
OPTO22 PCI
\end_layout

\begin_layout Standard
PCI AC5 ADAPTER CARD / HAL DRIVER This page is considered current as of
 November 2008.
 
\end_layout

\begin_layout Section
The Adapter Card
\end_layout

\begin_layout Standard
This is a card made by OPTO22 for adapting the PCI port to solid state relay
 racks such as their standard or G4 series.
 It has 2 ports that can control up to 24 points each and has 4 on board
 LEDS.
 The ports use 50 pin connectors the same as Mesa boards.
 Any relay racks/breakout boards thats work with Mesa Cards should work
 with this card with the understanding any encoder counters, pwm etc would
 have to be done in software- The AC5 does not have any 'smart' logic on
 board it just an adapter.
 
\end_layout

\begin_layout Standard
See the manufacturer's website for more info:
\end_layout

\begin_layout Standard
http://www.opto22.com/site/pr_details.aspx?item=PCI-AC5&qs=100110021011,,,1,3
\end_layout

\begin_layout Standard
I would like to thank OPTO22 for releasing info in their manual, easing
 the writing of this driver!
\end_layout

\begin_layout Section
The Driver 
\end_layout

\begin_layout Standard
This driver is for the PCI ac5 card and will not work with the ISA ac5 card.
 The HAL driver is a realtime module.
 It will support 4 cards as is (more cards are possible with a change in
 the source code).
 Load the basic driver like so:
\end_layout

\begin_layout Quote
loadrt opto_ac5
\end_layout

\begin_layout Standard
This will load the driver which will search for max 4 boards.It will set
 i/o of each board's 2 ports to a default setting.
 The default configuration is for 12 inputs then 12 outputs.
 The pin name numbers correspond to the position on the relay rack.
 For example the pin names for the default i/o setting of port 0 would be:
\end_layout

\begin_layout Standard
opto_ac5.0.port0.in-00 They would be numbered from 00 to 11
\end_layout

\begin_layout Standard
opto_ac5.0.port0.out-12 They would be numbered 12 to 23 port 1 would be the
 same.
\end_layout

\begin_layout Section
PINS
\end_layout

\begin_layout Standard
opto_ac5.[BOARDNUMBER].port[PORTNUMBER].in-[PINNUMBER] OUT bit
\end_layout

\begin_layout Standard
opto_ac5.[BOARDNUMBER].port[PORTNUMBER].in-[PINNUMBER]-not OUT bit 
\end_layout

\begin_layout Standard
Connect a hal bit signal to this pin to read an I/O point from the card.
 The PINNUMBER represents the position in the relay rack.
 Eg.
 PINNUMBER 0 is position 0 in a opto22 relay rack and would be pin 47 on
 the 50 pin header connector.
 The -not pin is inverted so that LOW gives TRUE and HIGH gives FALSE.
 
\end_layout

\begin_layout Standard
opto_ac5.[BOARDNUMBER].port[PORTNUMBER].out-[PINNUMBER] IN bit 
\end_layout

\begin_layout Standard
Connect a hal bit signal to this pin to write to an I/O point of the card.
 The PINNUMBER represents the position in the relay rack.Eg.
 PINNUMBER 23 is position 23 in a opto22 relay rack and would be pin 1 on
 the 50 pin header connector.
 
\end_layout

\begin_layout Standard
opto_ac5.[BOARDNUMBER].led[NUMBER] OUT bit 
\end_layout

\begin_layout Standard
Turns one of the 4 onboard LEDS on/off.
 LEDS are numbered 0 to 3.
\end_layout

\begin_layout Standard
BOARDNUMBER can be 0-3 PORTNUMBER can be 0 or 1.
 Port 0 is closest to the card bracket.
 
\end_layout

\begin_layout Section
PARAMETERS
\end_layout

\begin_layout Standard
opto_ac5.[BOARDNUMBER].port[PORTNUMBER].out-[PINNUMBER]-invert W bit 
\end_layout

\begin_layout Standard
When TRUE, invert the meaning of the corresponding -out pin so that TRUE
 gives LOW and FALSE gives HIGH.
\end_layout

\begin_layout Section
FUNCTIONS 
\end_layout

\begin_layout Standard
opto_ac5.0.digital-read Add this to a thread to read all the input points.
 
\end_layout

\begin_layout Standard
opto_ac5.0.digital-write Add this to a thread to write all the output points
 and LEDS.
\end_layout

\begin_layout Standard
For example the pin names for the default I/O setting of port 0 would be:
\end_layout

\begin_layout Standard
opto_ac5.0.port0.in-00 
\end_layout

\begin_layout Standard
They would be numbered from 00 to 11
\end_layout

\begin_layout Standard
opto_ac5.0.port0.out-12 
\end_layout

\begin_layout Standard
They would be numbered 12 to 23 port 1 would be the same.
\end_layout

\begin_layout Section
Configuring I/O Ports
\end_layout

\begin_layout Standard
To change the default setting load the driver something like so:
\end_layout

\begin_layout Quote
loadrt opto_ac5 portconfig0=0xffff portconfig1=0xff0000
\end_layout

\begin_layout Standard
Of course changing the numbers to match the i/o you would like.
 Each port can be set up different.
 
\end_layout

\begin_layout Standard
Heres how to figure out the number: The configuration number represents
 a 32 bit long code to tell the card which i/o points are output vrs input.
 The lower 24 bits are the i/o points of one port.
 The 2 highest bits are for 2 of the on board LEDS.
 A one in any bit position makes the i/o point an output.
 The two highest bits must be output for the LEDS to work.
 The driver will automatically set the two highest bits for you, we won't
 talk about them.
 
\end_layout

\begin_layout Standard
The easiest way to do this is to fire up the calculator under APPLICATIONS/ACCES
SORIES.
 Set it to scientific (click view).
 Set it BINARY (radio button Bin).
 Press 1 for every output you want and/or zero for every input.
 Remember that HAL pin 00 corresponds to the rightmost bit.
 24 numbers represent the 24 i/o points of one port.
 So for the default setting (12 inputs then 12 outputs) you would push 1
 twelve times (thats the outputs) then 0 twelve times (thats the inputs).
 Notice the first i/0 point is the lowest (right most) bit.
 (that bit corresponds to HAL pin 00 .looks backwards) You should have 24
 digits on the screen.
 Now push the Hex radio button.
 The displayed number (fff000) is the configport number ( put a '0x' in
 front of it designating it a HEX number).
\end_layout

\begin_layout Standard
Another example : to set the port for 8 outputs and 16 inputs (the same
 as a Mesa card).
 Here is the 24 bits represented in a BINARY number.
 Bit 1 is the rightmost number.
\end_layout

\begin_layout Standard
000000000000000011111111
\end_layout

\begin_layout Standard
16 zeros for the 16 inputs 8 ones for the 8 outputs
\end_layout

\begin_layout Standard
Which converts to FF on the calculator so 0xff is the number to use for
 portconfig0 and/or portconfig1 when loading the driver.
\end_layout

\begin_layout Section
Pin Numbering
\end_layout

\begin_layout Standard
HAL pin 00 corresponds to bit 1 (the rightmost) which represents position
 0 on an opto22 relay rack.
 HAL pin 01 corresponds to bit 2 (one spot to the left of the rightmost)
 which represents position 1 on an opto22 relay rack.
 etc.
 HAL pin 23 corresponds to bit 24 (the leftmost) which represents position
 23 on an opto22 relay rack.
\end_layout

\begin_layout Standard
Hal pin 00 connects to pin 47 on the 50 pin connector of each port.
 Hal pin 01 connects to pin 45 on the 50 pin connector of each port.
 etc.
 Hal pin 23 connects to pin 1 on the 50 pin connector of each port.
\end_layout

\begin_layout Standard
Note that opto22 and Mesa use opposite numbering systems: opto22 position
 23 = connector pin 1.
 and the position goes down as the connector pin number goes up Mesa Hostmot4
 position 1 = connector pin 1.
 and the position number goes up as the connector pin number goes up
\end_layout

\end_body
\end_document
